AAedad <- datos$AAedad
peso_ehoy <- datos$peso_ehoy
b <- BarChart(x = AAedad, by = peso_ehoy, stack100 = TRUE)
AAedad <- datos$AAedad
peso_edes <- datos$peso_edes
b <- BarChart(x = AAedad, by = peso_edes, stack100 = TRUE)
# Quieren bajar de peso
AAedad <- datos$AAedad
peso_acc <- datos$peso_acc
b <- BarChart(x = AAedad, by = peso_acc, stack100 = TRUE)
# horas de ejercicio a la semana actualmente
ggplot(data = datos, aes(x = ejer_act, fill = AAedad)) +
geom_bar() +
ggtitle("Cantidad de personas que realizan ejercicio categorizado en horas por semana") +
ylab("Cantidad") +
xlab("Horas de ejercicio por semana")
# horas de ejercicio a la semana actualmente
ggplot(data = datos, aes(x = ejer_act, fill = AAedad)) +
geom_bar() +
ggtitle("Cantidad de personas que realizan ejercicio categorizado en horas por semana") +
ylab("Cantidad") +
xlab("Horas de ejercicio por semana")
b1 <- ggplot(data = datos, aes(x = ejer1, fill = AAedad)) +
geom_bar() +
ylab("Cantidad") +
xlab("Horas de ejercicio por semana")
b5 <- ggplot(data = datos, aes(x = ejer5, fill = AAedad)) +
geom_bar() +
ylab("Cantidad") +
xlab("Horas de ejercicio por semana")
b10 <- ggplot(data = datos, aes(x = ejer10, fill = AAedad)) +
geom_bar() +
ylab("Cantidad") +
xlab("Horas de ejercicio por semana")
b20 <- ggplot(data = datos, aes(x = ejer20, fill = AAedad)) +
geom_bar() +
ylab("Cantidad") +
xlab("Horas de ejercicio por semana")
b30 <- ggplot(data = datos, aes(x = ejer30, fill = AAedad)) +
geom_bar() +
ylab("Cantidad") +
xlab("Horas de ejercicio por semana")
ggpubr::ggarrange(b1, b5, b10, b20, b30,
labels = c("1", "5","10", "20", "30"),
ncol = 3, nrow = 2)
###############################################################################
# Por grupo de edad coloreados por IMC
AAedad <- datos$AAedad
AIMC <- datos$AIMC
b <- BarChart(x = AAedad, by = AIMC, stack100 = TRUE)
# Quieren bajar de peso
AAedad <- datos$AAedad
peso_acc <- datos$peso_acc
b <- BarChart(x = AAedad, by = peso_acc, stack100 = TRUE)
b1 <- BarChart(x = AAedad, by = AIMC, stack100 = TRUE)
b2 <- BarChart(x = AAedad, by = peso_acc, stack100 = TRUE)
ggpubr::ggarrange(b1, b2,
ncol = 2, nrow = 1)
# horas de ejercicio a la semana actualmente
bact <- ggplot(data = datos, aes(x = ejer_act, fill = AAedad)) +
geom_bar() +
ggtitle("Cantidad de personas que realizan ejercicio categorizado en horas por semana") +
ylab("Cantidad") +
xlab("Horas de ejercicio por semana")
b1 <- ggplot(data = datos, aes(x = ejer1, fill = AAedad)) +
geom_bar() +
ylab("Cantidad") +
xlab("Horas de ejercicio por semana")
b5 <- ggplot(data = datos, aes(x = ejer5, fill = AAedad)) +
geom_bar() +
ylab("Cantidad") +
xlab("Horas de ejercicio por semana")
b10 <- ggplot(data = datos, aes(x = ejer10, fill = AAedad)) +
geom_bar() +
ylab("Cantidad") +
xlab("Horas de ejercicio por semana")
b20 <- ggplot(data = datos, aes(x = ejer20, fill = AAedad)) +
geom_bar() +
ylab("Cantidad") +
xlab("Horas de ejercicio por semana")
b30 <- ggplot(data = datos, aes(x = ejer30, fill = AAedad)) +
geom_bar() +
ylab("Cantidad") +
xlab("Horas de ejercicio por semana")
ggpubr::ggarrange(bact, b1, b5, b10, b20, b30,
labels = c("Actualmente","1", "5","10", "20", "30"),
ncol = 3, nrow = 2)
ggpubr::ggarrange(bact, b1, b5, b10, b20, b30,
labels = c("","1", "5","10", "20", "30"),
ncol = 3, nrow = 2)
#stat_count(geom = "text",
#           aes(label = stat(count)),
#           position=position_stack(0.5),
#           colour="white")
bact <- ggplot(data = datos, aes(x = ejer_act, fill = AAedad)) +
geom_bar() +
ylab("Cantidad") +
xlab("Horas de ejercicio por semana")
ggpubr::ggarrange(bact, b1, b5, b10, b20, b30,
labels = c("Actual","1", "5","10", "20", "30"),
ncol = 3, nrow = 2)
#--------------------------------------*----------------------------------------
#------------------------------- Proyecto 1  -----------------------------------
#--------------------------------------*----------------------------------------
datos <- read.csv("~/GitHub/Proyecto/desarrollo/python/datos_patronesejercicio.csv", header = TRUE)
str(datos)
summary(datos)
datos$id_gestud <- factor(datos$id_gestud)
datos$id_sexo <- factor(datos$id_sexo,
levels = c('M', 'F'),
labels = c("hombre", "mujer"))
datos$id_sexo <- factor(datos$id_sexo,
levels = c('M', 'F'),
labels = c("hombre", "mujer"))
datos$id_gestud <- factor(datos$id_gestud)
datos$ejer0B <- factor(datos$ejer0B)
datos$ejer1B <- factor(datos$ejer1B)
datos$ejer5B <- factor(datos$ejer5B)
datos$ejer10B <- factor(datos$ejer10B)
datos$ejer0_10B <- factor(datos$ejer0_10B)
datos$obesity <- factor(datos$obesity)
datos$ejer0_10 <- factor(datos$ejer0_10)
summary(datos)
rm(list = ls(all.names = TRUE))
gc()
#--------------------------------------*----------------------------------------
#------------------------------- Proyecto 1  -----------------------------------
#--------------------------------------*----------------------------------------
datos <- read.csv("~/GitHub/Proyecto/desarrollo/python/datos_patronesejercicio.csv", header = TRUE)
str(datos)
summary(datos)
datos$id_sexo <- factor(datos$id_sexo,
levels = c('M', 'F'),
labels = c("hombre", "mujer"))
datos$id_gestud <- factor(datos$id_gestud)
datos$ejer0B <- factor(datos$ejer0B)
datos$ejer1B <- factor(datos$ejer1B)
datos$ejer5B <- factor(datos$ejer5B)
datos$ejer10B <- factor(datos$ejer10B)
datos$ejer0_10 <- factor(datos$ejer0_10)
datos$obesity <- factor(datos$obesity)
str(datos)
summary(datos)
#--------------------------------------*----------------------------------------
#---------------------- Regresion LogÃ­stica  -----------------------------------
#--------------------------------------*----------------------------------------
train <- datos[1:711,]
test <- datos[712:,]
test <- datos[712:-1,]
test <- datos[712:1067,]
View(datos)
fit <- glm(obesity ~ ., family=binomial(link='logit'), data=train)
summary(it)
summary(fit)
fit <- glm(obesity ~ ejer0B + ejer1B + ejer5B + ejer10B, family=binomial(link='logit'), data=train)
summary(fit)
fit <- glm(obesity ~ ejer0B * ejer1B * ejer5B * ejer10B, family=binomial(link='logit'), data=train)
summary(fit)
View(test)
anova(fit, test="Chisq")
fitted.results <- predict(fit, newdata = subset(test, select=c("ejer0B", "ejer1B", "ejer5B", "ejer10B")), type='response')
fitted.results <- ifelse(fitted.results > 0.5,1,0)
misClasificError <- mean(fitted.results != test$obesity)
print(paste('Accuracy', 1 - misClasificError))
p <- predict(model, newdata=subset(test,select=c(2,3,4,5,6,7,8)), type="response")
p <- predict(fit, newdata=subset(test,select=c(2,3,4,5,6,7,8)), type="response")
pr <- prediction(p, test$Survived)
library(ROCR)
install.packages('ROCR')
library(ROCR)
p <- predict(fit, newdata=subset(test,select=c(2,3,4,5,6,7,8)), type="response")
pr <- prediction(p, test$Survived)
p <- predict(fit, newdata=subset(test,select=c(2,3,4,5,6,7,8)), type="response")
pr <- prediction(p, test$OBESITY)
prf <- performance(pr, measure = "tpr", x.measure = "fpr")
pr <- prediction(p, test$OBESITY)
pr <- prediction(p, test$obesity)
prf <- performance(pr, measure = "tpr", x.measure = "fpr")
plot(prf)
auc <- performance(pr, measure = "auc")
auc <- auc@y.values[[1]]
auc
library(ROCR)
p <- predict(fit, newdata=subset(test,select=c("ejer0B", "ejer1B", "ejer5B", "ejer10B")), type="response")
pr <- prediction(p, test$obesity)
prf <- performance(pr, measure = "tpr", x.measure = "fpr")
plot(prf)
auc <- performance(pr, measure = "auc")
auc <- auc@y.values[[1]]
auc
summary(fit)
modelo <- glm(obesity ~ ejer0B + ejer1B + ejer5B + ejer10B, family=binomial(link='logit'), data=train)
summary(modelo)
library(AUC)
install.packages('AUC')
pred <- predict(modelo)   ### Predecir P[Y=1]
Ypred <- ifelse(pred>0.5,1,0)   ### Predecir Y, considerando como punto de corte 0.5
table(y,Ypred)   ### Tabla de observaciones vs. predicciones
table(obesity,Ypred)   ### Tabla de observaciones vs. predicciones
table(datos$obesity,Ypred)   ### Tabla de observaciones vs. predicciones
Ypred
table(train$obesity,Ypred)   ### Tabla de observaciones vs. predicciones
sens <- sensitivity(pred,factor(train$obesity))   ### Calcula la sensibilidad
sens <- sensitivity(pred,factor(train$obesity))   ### Calcula la sensibilidad
#p <- predict(fit, newdata=subset(test,select=c("ejer0B", "ejer1B", "ejer5B", "ejer10B")), type="response")
p <- predict(fit, type="response")
pr <- prediction(p, test$obesity)
pr <- prediction(p, test$obesity)
#p <- predict(fit, newdata=subset(test,select=c("ejer0B", "ejer1B", "ejer5B", "ejer10B")), type="response")
p <- predict(fit, train, type="response")
pr <- prediction(p, test$obesity)
#p <- predict(fit, newdata=subset(test,select=c("ejer0B", "ejer1B", "ejer5B", "ejer10B")), type="response")
p <- predict(fit, test, type="response")
pr <- prediction(p, test$obesity)
pr <- prediction(p, test$obesity)
prf <- performance(pr, measure = "tpr", x.measure = "fpr")
plot(prf)
auc <- performance(pr, measure = "auc")
auc <- auc@y.values[[1]]
auc
#--------------------------------------*----------------------------------------
#---------------------------- Primer Intento -----------------------------------
#--------------------------------------*----------------------------------------
# La variable referencia es A
fit <- glm(obesity ~ ejer0B * ejer1B * ejer5B * ejer10B, family=binomial(link='logit'), data=train)
summary(fit)
anova(fit, test="Chisq")
fitted.results <- predict(fit, newdata = subset(test, select=c("ejer0B", "ejer1B", "ejer5B", "ejer10B")), type='response')
fitted.results <- ifelse(fitted.results > 0.5,1,0)
misClasificError <- mean(fitted.results != test$obesity)
print(paste('Accuracy', 1 - misClasificError))
library(ROCR)
#p <- predict(fit, newdata=subset(test,select=c("ejer0B", "ejer1B", "ejer5B", "ejer10B")), type="response")
p <- predict(fit, test, type="response")
pr <- prediction(p, test$obesity)
pr <- prediction(p, test$obesity)
prf <- performance(pr, measure = "tpr", x.measure = "fpr")
plot(prf)
auc <- performance(pr, measure = "auc")
auc <- auc@y.values[[1]]
auc
plot(prf)
modelo <- glm(obesity ~ ejer0B + ejer1B + ejer5B + ejer10B, family=binomial(link='logit'), data=train)
summary(modelo)
anova(modelo, test="Chisq")
fitted.results <- predict(modelo, newdata = subset(test, select=c("ejer0B", "ejer1B", "ejer5B", "ejer10B")), type='response')
fitted.results <- ifelse(fitted.results > 0.5,1,0)
misClasificError <- mean(fitted.results != test$obesity)
print(paste('Accuracy', 1 - misClasificError))
library(ROCR)
#p <- predict(fit, newdata=subset(test,select=c("ejer0B", "ejer1B", "ejer5B", "ejer10B")), type="response")
p <- predict(modelo, test, type="response")
pr <- prediction(p, test$obesity)
pr <- prediction(p, test$obesity)
prf <- performance(pr, measure = "tpr", x.measure = "fpr")
plot(prf)
auc <- performance(pr, measure = "auc")
auc <- auc@y.values[[1]]
auc ### Area bajo la curva ROC
plot(prf)
abline(coef = c(0, 1),
col = "red",
lwd = 1)
plot(prf)
abline(coef = c(0, 1),
col = "red",
lwd = 1)
auc <- performance(pr, measure = "auc")
auc <- auc@y.values[[1]]
auc ### Area bajo la curva ROC
modelo <- glm(obesity ~ ejer0B + ejer1B + ejer5B + ejer10B, family=binomial(link='logit'), data=train)
summary(modelo)
anova(modelo, test="Chisq")
fitted.results <- predict(modelo, newdata = subset(test, select=c("ejer0B", "ejer1B", "ejer5B", "ejer10B")), type='response')
fitted.results <- ifelse(fitted.results > 0.5,1,0)
misClasificError <- mean(fitted.results != test$obesity)
print(paste('Accuracy', 1 - misClasificError))
library(ROCR)
#p <- predict(fit, newdata=subset(test,select=c("ejer0B", "ejer1B", "ejer5B", "ejer10B")), type="response")
p <- predict(modelo, test, type="response")
pr <- prediction(p, test$obesity)
pr <- prediction(p, test$obesity)
prf <- performance(pr, measure = "tpr", x.measure = "fpr")
plot(prf)
abline(coef = c(0, 1),
col = "red",
lwd = 1)
auc <- performance(pr, measure = "auc")
auc <- auc@y.values[[1]]
auc ### Area bajo la curva ROC
#p <- predict(fit, newdata=subset(test,select=c("ejer0B", "ejer1B", "ejer5B", "ejer10B")), type="response")
p <- predict(fit, test, type="response")
pr <- prediction(p, test$obesity)
pr <- prediction(p, test$obesity)
prf <- performance(pr, measure = "tpr", x.measure = "fpr")
plot(prf)
abline(coef = c(0, 1),
col = "red",
lwd = 1)
auc <- performance(pr, measure = "auc")
auc <- auc@y.values[[1]]
auc ### Area bajo la curva ROC
rm(list = ls(all.names = TRUE))
gc()
#--------------------------------------*----------------------------------------
#------------------------------- Proyecto 1  -----------------------------------
#--------------------------------------*----------------------------------------
datos <- read.csv("~/GitHub/Proyecto/desarrollo/python/datos_patronesejercicio.csv", header = TRUE)
str(datos) # 1067 observaciones
summary(datos)
# Tratamos a la mayoria de las variables como categoricas/factor
datos$id_sexo <- factor(datos$id_sexo,
levels = c('M', 'F'),
labels = c("hombre", "mujer"))
datos$id_gestud <- factor(datos$id_gestud)
datos$ejer0B <- factor(datos$ejer0B)
datos$ejer1B <- factor(datos$ejer1B)
datos$ejer5B <- factor(datos$ejer5B)
datos$ejer10B <- factor(datos$ejer10B)
datos$ejer0_10 <- factor(datos$ejer0_10)
datos$obesity <- factor(datos$obesity)
str(datos)
summary(datos)
#--------------------------------------*----------------------------------------
#---------------------- Regresion LogÃ­stica  -----------------------------------
#--------------------------------------*----------------------------------------
# 2/3 para entrenar y 1/3 para pruebas
train <- datos[1:711,]
test <- datos[712:1067,]
#--------------------------------------*----------------------------------------
#---------------------------- Primer Intento -----------------------------------
#----------------------- Modelo con interacciones ------------------------------
#--------------------------------------*----------------------------------------
# La variable referencia es A
fit <- glm(obesity ~ ejer0B * ejer1B * ejer5B * ejer10B, family=binomial(link='logit'), data=train)
summary(fit)
anova(fit, test="Chisq")
fitted.results <- predict(fit, newdata = subset(test, select=c("ejer0B", "ejer1B", "ejer5B", "ejer10B")), type='response')
fitted.results <- ifelse(fitted.results > 0.5,1,0)
misClasificError <- mean(fitted.results != test$obesity)
print(paste('Accuracy', 1 - misClasificError))
library(ROCR)
#p <- predict(fit, newdata=subset(test,select=c("ejer0B", "ejer1B", "ejer5B", "ejer10B")), type="response")
p <- predict(fit, test, type="response")
pr <- prediction(p, test$obesity)
pr <- prediction(p, test$obesity)
prf <- performance(pr, measure = "tpr", x.measure = "fpr")
plot(prf)
abline(coef = c(0, 1),
col = "red",
lwd = 1)
auc <- performance(pr, measure = "auc")
auc <- auc@y.values[[1]]
auc ### Area bajo la curva ROC 0.5791799
modelo <- glm(obesity ~ ejer0B + ejer1B + ejer5B + ejer10B, family=binomial(link='logit'), data=train)
summary(modelo)
anova(modelo, test="Chisq")
fitted.results <- predict(modelo, newdata = subset(test, select=c("ejer0B", "ejer1B", "ejer5B", "ejer10B")), type='response')
fitted.results <- ifelse(fitted.results > 0.5,1,0)
misClasificError <- mean(fitted.results != test$obesity)
print(paste('Accuracy', 1 - misClasificError))
library(ROCR)
#p <- predict(fit, newdata=subset(test,select=c("ejer0B", "ejer1B", "ejer5B", "ejer10B")), type="response")
p <- predict(modelo, test, type="response")
pr <- prediction(p, test$obesity)
pr <- prediction(p, test$obesity)
prf <- performance(pr, measure = "tpr", x.measure = "fpr")
plot(prf)
abline(coef = c(0, 1),
col = "red",
lwd = 1)
auc <- performance(pr, measure = "auc")
auc <- auc@y.values[[1]]
auc ### Area bajo la curva ROC 0.5823613
rm(list = ls(all.names = TRUE))
gc()
#--------------------------------------*----------------------------------------
#------------------------------- Proyecto 1  -----------------------------------
#--------------------------------------*----------------------------------------
datos <- read.csv("~/GitHub/Proyecto/desarrollo/python/datos_patronesejercicio.csv", header = TRUE)
str(datos) # 1067 observaciones
summary(datos)
# Tratamos a la mayoria de las variables como categoricas/factor
datos$id_sexo <- factor(datos$id_sexo,
levels = c('M', 'F'),
labels = c("hombre", "mujer"))
datos$id_gestud <- factor(datos$id_gestud)
datos$ejer0B <- factor(datos$ejer0B)
datos$ejer1B <- factor(datos$ejer1B)
datos$ejer5B <- factor(datos$ejer5B)
datos$ejer10B <- factor(datos$ejer10B)
datos$ejer0_10 <- factor(datos$ejer0_10)
datos$obesity <- factor(datos$obesity)
str(datos)
summary(datos)
#--------------------------------------*----------------------------------------
#---------------------- Regresion LogÃ­stica  -----------------------------------
#--------------------------------------*----------------------------------------
# 2/3 para entrenar y 1/3 para pruebas
train <- datos[1:711,]
test <- datos[712:1067,]
#--------------------------------------*----------------------------------------
#---------------------------- Primer Intento -----------------------------------
#----------------------- Modelo con interacciones ------------------------------
#--------------------------------------*----------------------------------------
# La variable referencia es A
fit <- glm(obesity ~ ejer0B * ejer1B * ejer5B * ejer10B, family=binomial(link='logit'), data=train)
summary(fit)
anova(fit, test="Chisq")
fitted.results <- predict(fit, newdata = subset(test, select=c("ejer0B", "ejer1B", "ejer5B", "ejer10B")), type='response')
fitted.results <- ifelse(fitted.results > 0.5,1,0)
misClasificError <- mean(fitted.results != test$obesity)
print(paste('Accuracy', 1 - misClasificError))
library(ROCR)
#p <- predict(fit, newdata=subset(test,select=c("ejer0B", "ejer1B", "ejer5B", "ejer10B")), type="response")
p <- predict(fit, test, type="response")
pr <- prediction(p, test$obesity)
pr <- prediction(p, test$obesity)
prf <- performance(pr, measure = "tpr", x.measure = "fpr")
plot(prf)
abline(coef = c(0, 1),
col = "red",
lwd = 1)
auc <- performance(pr, measure = "auc")
auc <- auc@y.values[[1]]
auc ### Area bajo la curva ROC 0.5791799
modelo <- glm(obesity ~ ejer0B + ejer1B + ejer5B + ejer10B, family=binomial(link='logit'), data=train)
summary(modelo)
anova(modelo, test="Chisq")
#fitted.results <- predict(modelo, newdata = subset(test, select=c("ejer0B", "ejer1B", "ejer5B", "ejer10B")), type='response')
fitted.results <- predict(modelo, test, type="response")
fitted.results <- ifelse(fitted.results > 0.5,1,0)
misClasificError <- mean(fitted.results != test$obesity)
print(paste('Accuracy', 1 - misClasificError))
library(ROCR)
#p <- predict(fit, newdata=subset(test,select=c("ejer0B", "ejer1B", "ejer5B", "ejer10B")), type="response")
p <- predict(modelo, test, type="response")
pr <- prediction(p, test$obesity)
pr <- prediction(p, test$obesity)
prf <- performance(pr, measure = "tpr", x.measure = "fpr")
plot(prf)
abline(coef = c(0, 1),
col = "red",
lwd = 1)
auc <- performance(pr, measure = "auc")
auc <- auc@y.values[[1]]
auc ### Area bajo la curva ROC 0.5823613
plot(prf, title="Curva ROC mod sin interacciones")
plot(prf, main="Curva ROC mod sin interacciones")
plot(prf, main="Curva ROC mod con interacciones")
abline(coef = c(0, 1),
col = "red",
lwd = 1)
modelo <- glm(obesity ~ ejer0B + ejer1B + ejer5B + ejer10B, family=binomial(link='logit'), data=train)
summary(modelo)
anova(modelo, test="Chisq")
#fitted.results <- predict(modelo, newdata = subset(test, select=c("ejer0B", "ejer1B", "ejer5B", "ejer10B")), type='response')
fitted.results <- predict(modelo, test, type="response")
fitted.results <- ifelse(fitted.results > 0.5,1,0)
misClasificError <- mean(fitted.results != test$obesity)
print(paste('Accuracy', 1 - misClasificError))
library(ROCR)
#p <- predict(fit, newdata=subset(test,select=c("ejer0B", "ejer1B", "ejer5B", "ejer10B")), type="response")
p <- predict(modelo, test, type="response")
pr <- prediction(p, test$obesity)
pr <- prediction(p, test$obesity)
prf <- performance(pr, measure = "tpr", x.measure = "fpr")
plot(prf, main="Curva ROC mod sin interacciones")
abline(coef = c(0, 1),
col = "red",
lwd = 1)
library(ROCR)
#p <- predict(fit, newdata=subset(test,select=c("ejer0B", "ejer1B", "ejer5B", "ejer10B")), type="response")
p <- predict(fit, test, type="response")
pr <- prediction(p, test$obesity)
pr <- prediction(p, test$obesity)
prf <- performance(pr, measure = "tpr", x.measure = "fpr")
plot(prf, main="Curva ROC mod con interacciones")
abline(coef = c(0, 1),
col = "red",
lwd = 1)
#--------------------------------------*----------------------------------------
#---------------------------- Primer Intento -----------------------------------
#----------------------- Modelo con interacciones ------------------------------
#--------------------------------------*----------------------------------------
# La variable referencia es A
fit <- glm(obesity ~ ejer0B * ejer1B * ejer5B * ejer10B, family=binomial(link='logit'), data=train)
summary(fit)
anova(fit, test="Chisq")
fitted.results <- predict(fit, newdata = subset(test, select=c("ejer0B", "ejer1B", "ejer5B", "ejer10B")), type='response')
fitted.results <- ifelse(fitted.results > 0.5,1,0)
misClasificError <- mean(fitted.results != test$obesity)
print(paste('Accuracy', 1 - misClasificError))
library(ROCR)
#p <- predict(fit, newdata=subset(test,select=c("ejer0B", "ejer1B", "ejer5B", "ejer10B")), type="response")
p <- predict(fit, test, type="response")
pr <- prediction(p, test$obesity)
pr <- prediction(p, test$obesity)
prf <- performance(pr, measure = "tpr", x.measure = "fpr")
plot(prf, main="Curva ROC mod con interacciones")
abline(coef = c(0, 1),
col = "red",
lwd = 1)
View(datos)
#--------------------------------------*----------------------------------------
#---------------------------- Primer Intento -----------------------------------
#----------------------- Modelo con interacciones ------------------------------
#--------------------------------------*----------------------------------------
# La variable referencia es A
fit <- glm(obesity ~ ejer0B * ejer1B * ejer5B * ejer10B, family=binomial(link='logit'), data=train)
summary(fit)
View(datos)
